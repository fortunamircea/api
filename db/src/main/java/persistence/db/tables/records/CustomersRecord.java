/*
 * This file is generated by jOOQ.
 */
package persistence.db.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import persistence.db.tables.Customers;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomersRecord extends UpdatableRecordImpl<CustomersRecord> implements Record7<UUID, String, String, String, UUID, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.customers.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.customers.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.customers.first_name</code>.
     */
    public void setFirstName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.customers.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.customers.last_name</code>.
     */
    public void setLastName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.customers.last_name</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.customers.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.customers.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.customers.cart_id</code>.
     */
    public void setCartId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.customers.cart_id</code>.
     */
    public UUID getCartId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.customers.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.customers.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.customers.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.customers.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, UUID, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, String, UUID, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Customers.CUSTOMERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Customers.CUSTOMERS.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Customers.CUSTOMERS.LAST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Customers.CUSTOMERS.EMAIL;
    }

    @Override
    public Field<UUID> field5() {
        return Customers.CUSTOMERS.CART_ID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Customers.CUSTOMERS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Customers.CUSTOMERS.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public UUID component5() {
        return getCartId();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public UUID value5() {
        return getCartId();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public CustomersRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public CustomersRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public CustomersRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public CustomersRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public CustomersRecord value5(UUID value) {
        setCartId(value);
        return this;
    }

    @Override
    public CustomersRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CustomersRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CustomersRecord values(UUID value1, String value2, String value3, String value4, UUID value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomersRecord
     */
    public CustomersRecord() {
        super(Customers.CUSTOMERS);
    }

    /**
     * Create a detached, initialised CustomersRecord
     */
    public CustomersRecord(UUID id, String firstName, String lastName, String email, UUID cartId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Customers.CUSTOMERS);

        setId(id);
        setFirstName(firstName);
        setLastName(lastName);
        setEmail(email);
        setCartId(cartId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}

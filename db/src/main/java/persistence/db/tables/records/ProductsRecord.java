/*
 * This file is generated by jOOQ.
 */
package persistence.db.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import persistence.db.tables.Products;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsRecord extends UpdatableRecordImpl<ProductsRecord> implements Record7<UUID, String, BigDecimal, BigDecimal, LocalDateTime, LocalDateTime, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.products.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.products.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.products.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.products.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.products.units</code>.
     */
    public void setUnits(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.products.units</code>.
     */
    public BigDecimal getUnits() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.products.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.products.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.products.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.products.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.products.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.products.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.products.category_id</code>.
     */
    public void setCategoryId(UUID value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.products.category_id</code>.
     */
    public UUID getCategoryId() {
        return (UUID) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, BigDecimal, BigDecimal, LocalDateTime, LocalDateTime, UUID> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, BigDecimal, BigDecimal, LocalDateTime, LocalDateTime, UUID> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Products.PRODUCTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Products.PRODUCTS.TYPE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Products.PRODUCTS.UNITS;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Products.PRODUCTS.PRICE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Products.PRODUCTS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Products.PRODUCTS.UPDATED_AT;
    }

    @Override
    public Field<UUID> field7() {
        return Products.PRODUCTS.CATEGORY_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public BigDecimal component3() {
        return getUnits();
    }

    @Override
    public BigDecimal component4() {
        return getPrice();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public UUID component7() {
        return getCategoryId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public BigDecimal value3() {
        return getUnits();
    }

    @Override
    public BigDecimal value4() {
        return getPrice();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public UUID value7() {
        return getCategoryId();
    }

    @Override
    public ProductsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ProductsRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public ProductsRecord value3(BigDecimal value) {
        setUnits(value);
        return this;
    }

    @Override
    public ProductsRecord value4(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductsRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ProductsRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ProductsRecord value7(UUID value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public ProductsRecord values(UUID value1, String value2, BigDecimal value3, BigDecimal value4, LocalDateTime value5, LocalDateTime value6, UUID value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsRecord
     */
    public ProductsRecord() {
        super(Products.PRODUCTS);
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(UUID id, String type, BigDecimal units, BigDecimal price, LocalDateTime createdAt, LocalDateTime updatedAt, UUID categoryId) {
        super(Products.PRODUCTS);

        setId(id);
        setType(type);
        setUnits(units);
        setPrice(price);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCategoryId(categoryId);
    }
}

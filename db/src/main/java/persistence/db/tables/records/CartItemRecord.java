/*
 * This file is generated by jOOQ.
 */
package persistence.db.tables.records;


import java.math.BigDecimal;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import persistence.db.tables.CartItem;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CartItemRecord extends UpdatableRecordImpl<CartItemRecord> implements Record4<UUID, UUID, UUID, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.cart_item.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cart_item.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.cart_item.product_id</code>.
     */
    public void setProductId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.cart_item.product_id</code>.
     */
    public UUID getProductId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.cart_item.cart_id</code>.
     */
    public void setCartId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.cart_item.cart_id</code>.
     */
    public UUID getCartId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.cart_item.quantity</code>.
     */
    public void setQuantity(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.cart_item.quantity</code>.
     */
    public BigDecimal getQuantity() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, UUID, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, UUID, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return CartItem.CART_ITEM.ID;
    }

    @Override
    public Field<UUID> field2() {
        return CartItem.CART_ITEM.PRODUCT_ID;
    }

    @Override
    public Field<UUID> field3() {
        return CartItem.CART_ITEM.CART_ID;
    }

    @Override
    public Field<BigDecimal> field4() {
        return CartItem.CART_ITEM.QUANTITY;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getProductId();
    }

    @Override
    public UUID component3() {
        return getCartId();
    }

    @Override
    public BigDecimal component4() {
        return getQuantity();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getProductId();
    }

    @Override
    public UUID value3() {
        return getCartId();
    }

    @Override
    public BigDecimal value4() {
        return getQuantity();
    }

    @Override
    public CartItemRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public CartItemRecord value2(UUID value) {
        setProductId(value);
        return this;
    }

    @Override
    public CartItemRecord value3(UUID value) {
        setCartId(value);
        return this;
    }

    @Override
    public CartItemRecord value4(BigDecimal value) {
        setQuantity(value);
        return this;
    }

    @Override
    public CartItemRecord values(UUID value1, UUID value2, UUID value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CartItemRecord
     */
    public CartItemRecord() {
        super(CartItem.CART_ITEM);
    }

    /**
     * Create a detached, initialised CartItemRecord
     */
    public CartItemRecord(UUID id, UUID productId, UUID cartId, BigDecimal quantity) {
        super(CartItem.CART_ITEM);

        setId(id);
        setProductId(productId);
        setCartId(cartId);
        setQuantity(quantity);
    }
}
